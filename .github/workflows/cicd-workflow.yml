name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        
    - name: Build with Maven
      run: mvn clean package
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/dialodds-api:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Unraid
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.UNRAID_HOST }}
        username: ${{ secrets.UNRAID_USERNAME }}
        password: ${{ secrets.UNRAID_PASSWORD }}
        script: |
          echo "${{ secrets.WIREGUARD_CONFIG }}" > /mnt/user/data/wireguard/wg0.conf
          echo "${{ secrets.ENV_FILE }}" > /mnt/user/data/wireguard/.env
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/dialodds-api:latest
          docker stop dialodds-api || true
          docker rm dialodds-api || true
          docker run -d --name dialodds-api \
            -p 8080:8080 \
            --cap-add=NET_ADMIN \
            --sysctl net.ipv6.conf.all.disable_ipv6=1 \
            -v /mnt/user/data/wireguard/wg0.conf:/etc/wireguard/wg0.conf \
            -v /mnt/user/data/wireguard/.env:/.env \
            --env-file /mnt/user/data/wireguard/.env \
            ${{ secrets.DOCKER_HUB_USERNAME }}/dialodds-api:latest
          docker exec dialodds-api sh -c "
            wg-quick up wg0
          "